worker_processes auto;
error_log /dev/stderr info;
pid logs/nginx.pid;
daemon off;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    lua_shared_dict upstreams 10m;
    lua_shared_dict round_robin_state 1m;

    access_log /dev/stdout;

    lua_package_path "$prefix/lua/?.lua;$prefix/lua-resty-chash/lib/?.lua;;";
    lua_package_cpath "$prefix/lua-resty-chash/?.so;;";

    
    init_by_lua_block {
        upstream_manager = require "upstream_manager"
        upstream_manager.init()
    }

    # Management apis
    server {
        listen 4000;
        server_name localhost;

        location / {
            content_by_lua_block {
                ngx.say('Hello world !')
            }
        }

        # /hosts/<host>/upstreams/<upstream>
        location ~ ^/hosts/([^/]+)/upstreams/([^/]+)$ {
            # Add
            if ($request_method = POST) {
                content_by_lua_block {
                    upstream_manager.add_upstream()
                }
            }

            # Delete
            if ($request_method = DELETE) {
                content_by_lua_block {
                    upstream_manager.remove_upstream()
                }
            }
        }
    }

    # Upstream resolver
    upstream dynamic_backend {
        server 0.0.0.1:1234;  # Placeholder server, else nginx throws error
        balancer_by_lua_block {
            upstream_manager.balance()
        }
    }

    # proxy lb

    
    server {
        listen 3000;
        server_name _;

        location / {
            # Set upstream based on Host header
            set_by_lua_block $backend_pool {
                return upstream_manager.get_upstream_pool()
            }

            proxy_pass http://dynamic_backend;
            
            # General proxy config
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }
    }
}